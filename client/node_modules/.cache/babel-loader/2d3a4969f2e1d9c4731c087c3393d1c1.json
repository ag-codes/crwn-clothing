{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk'; //import createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './root-reducer'; // const sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [thunk];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\n;\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); // sagaMiddleware.run()\n\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/andrewgarcia/projects/crwn-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","thunk","rootReducer","middlewares","process","env","NODE_ENV","push","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,gBAAxB,C,CAEA;;AAEA,MAAMC,WAAW,GAAG,CAACF,KAAD,CAApB;;AAGA,IAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBP,MAAjB;AACH;;AAAA;AAED,OAAO,MAAMQ,KAAK,GAAGX,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGK,WAAJ,CAA7B,CAAzB,C,CAEP;;AAEA,OAAO,MAAMM,SAAS,GAAGV,YAAY,CAACS,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\n//import createSagaMiddleware from 'redux-saga';\nimport rootReducer from './root-reducer';\n\n// const sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [thunk];\n\n\nif (process.env.NODE_ENV === 'development') {\n    middlewares.push(logger);\n};\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\n// sagaMiddleware.run()\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistor };"]},"metadata":{},"sourceType":"module"}