{"ast":null,"code":"var _jsxFileName = \"/Users/andrewgarcia/projects/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\n\nconst SignUp = () => {\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const signUpStart = this.props.signUpStart;\n    const _this$state = this.state,\n          displayName = _this$state.displayName,\n          email = _this$state.email,\n          password = _this$state.password,\n          confirmPassword = _this$state.confirmPassword;\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  const _this$state2 = this.state,\n        displayName = _this$state2.displayName,\n        email = _this$state2.email,\n        password = _this$state2.password,\n        confirmPassword = _this$state2.confirmPassword;\n  return React.createElement(SignUpContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(SignUpTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    onSubmit: this.handleSubmit,\n    className: \"sign-up-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: this.handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: this.handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: this.handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: this.handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/andrewgarcia/projects/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUpContainer","SignUpTitle","SignUp","handleSubmit","e","preventDefault","props","state","displayName","email","password","confirmPassword","alert","handleChange","target","name","value","setState","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\n\nconst SignUp = () => {\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const { signUpStart } = this.props;\n        const { displayName, email, password, confirmPassword } = this.state;\n        if (password !== confirmPassword) {\n            alert(\"passwords don't match\");\n            return;\n        }\n\n        signUpStart({ displayName, email, password });\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    const { displayName, email, password, confirmPassword } = this.state;\n    return (\n        <SignUpContainer>\n            <SignUpTitle>I do not have an account</SignUpTitle>\n            <span>Sign up with your email and password</span>\n            <form onSubmit={this.handleSubmit} className=\"sign-up-form\">\n                <FormInput\n                    type=\"text\"\n                    name=\"displayName\"\n                    value={displayName}\n                    onChange={this.handleChange}\n                    label=\"Display Name\"\n                    required\n                />\n                <FormInput\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    onChange={this.handleChange}\n                    label=\"Email\"\n                    required\n                />\n                <FormInput\n                    type=\"password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={this.handleChange}\n                    label=\"Password\"\n                    required\n                />\n                <FormInput\n                    type=\"password\"\n                    name=\"confirmPassword\"\n                    value={confirmPassword}\n                    onChange={this.handleChange}\n                    label=\"Confirm Password\"\n                    required\n                />\n                <CustomButton type=\"submit\">SIGN UP</CustomButton>\n            </form>\n        </SignUpContainer>\n    );\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n})\n\nexport default connect(null,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}